basePath: /api
definitions:
  dtos.BasicLoginRequestJSONDTO:
    properties:
      identifier:
        type: string
      password:
        type: string
    type: object
  dtos.ChangePasswordRequestJSONDTO:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    type: object
  handlers.ChangePasswordResponseData:
    properties:
      access_token:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      profile_picture_url:
        type: string
    type: object
  handlers.ChangePasswordSuccessResponse:
    properties:
      data:
        $ref: '#/definitions/handlers.ChangePasswordResponseData'
      message:
        type: string
      status:
        type: integer
    type: object
  handlers.CreatePostErrorResponse:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  handlers.CreatePostResponseData:
    properties:
      post_author_id:
        type: string
      post_id:
        type: string
      post_media:
        type: string
      post_text:
        type: string
      post_title:
        type: string
      post_type:
        type: string
    type: object
  handlers.CreatePostSuccessResponse:
    properties:
      data:
        $ref: '#/definitions/handlers.CreatePostResponseData'
      message:
        type: string
      status:
        type: integer
    type: object
  handlers.EditPostErrorResponse:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  handlers.EditPostResponseData:
    properties:
      post_author_id:
        type: string
      post_id:
        type: string
      post_media:
        type: string
      post_text:
        type: string
      post_title:
        type: string
      post_type:
        type: string
    type: object
  handlers.EditPostSuccessResponse:
    properties:
      data:
        $ref: '#/definitions/handlers.EditPostResponseData'
      message:
        type: string
      status:
        type: integer
    type: object
  handlers.RegisterUserErrorResponse:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  handlers.RegisterUserResponseData:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      payment_link:
        type: string
      profile_picture_url:
        type: string
    type: object
  handlers.RegisterUserSuccessResponse:
    properties:
      data:
        $ref: '#/definitions/handlers.RegisterUserResponseData'
      message:
        type: string
      status:
        type: integer
    type: object
  handlers.UpdateUserProfileErrorResponse:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  handlers.UpdateUserProfileResponseData:
    properties:
      dob:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      profession:
        type: string
      profile_picture_url:
        type: string
    type: object
  handlers.UpdateUserProfileSuccessResponse:
    properties:
      data:
        $ref: '#/definitions/handlers.UpdateUserProfileResponseData'
      message:
        type: string
      status:
        type: integer
    type: object
host: localhost:3000
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a sample swagger for Fiber
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiber Example API
  version: "1.0"
paths:
  /auth/me:
    get:
      description: Get my profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ChangePasswordSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.UpdateUserProfileErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.UpdateUserProfileErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.UpdateUserProfileErrorResponse'
      summary: Get my profile
      tags:
      - accounts
  /auth/me/edit:
    post:
      consumes:
      - multipart/form-data
      description: logged-in user
      parameters:
      - description: first name
        in: formData
        name: first_name
        type: string
      - description: last name
        in: formData
        name: last_name
        type: string
      - description: date of birth
        in: formData
        name: dob
        type: string
      - description: profile picture
        in: formData
        name: profile_picture
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.UpdateUserProfileSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.UpdateUserProfileErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.UpdateUserProfileErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.UpdateUserProfileErrorResponse'
      summary: logged-in user
      tags:
      - accounts
  /auth/password/change:
    post:
      consumes:
      - application/json
      - multipart/form-data
      description: change password
      parameters:
      - description: uu
        in: body
        name: jsonChangePaywordData
        schema:
          $ref: '#/definitions/dtos.ChangePasswordRequestJSONDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ChangePasswordSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.UpdateUserProfileErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.UpdateUserProfileErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.UpdateUserProfileErrorResponse'
      summary: change password
      tags:
      - accounts
  /generate_payment_link:
    get:
      consumes:
      - application/json
      description: login user
      parameters:
      - description: email of registered user
        in: query
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.UpdateUserProfileSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.UpdateUserProfileErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.UpdateUserProfileErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.UpdateUserProfileErrorResponse'
      summary: login user
      tags:
      - accounts
  /login/basic:
    post:
      consumes:
      - application/json
      - multipart/form-data
      description: login user
      parameters:
      - description: 'identifier: email or member number'
        in: formData
        name: identifier
        type: string
      - description: password
        in: formData
        name: password
        type: string
      - description: date of birth
        in: body
        name: jsonData
        schema:
          $ref: '#/definitions/dtos.BasicLoginRequestJSONDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.UpdateUserProfileSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.UpdateUserProfileErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.UpdateUserProfileErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.UpdateUserProfileErrorResponse'
      summary: login user
      tags:
      - accounts
  /posts:
    get:
      description: fetch post
      parameters:
      - description: asc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.EditPostSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.EditPostErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.EditPostErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.EditPostErrorResponse'
      summary: fetch post
      tags:
      - posts
    post:
      consumes:
      - multipart/form-data
      description: Create  new post
      parameters:
      - description: member number
        in: formData
        name: title
        required: true
        type: string
      - description: type of post
        in: formData
        name: type_of_post
        required: true
        type: string
      - description: text
        in: formData
        name: text
        required: true
        type: string
      - description: profile picture
        in: formData
        name: profile_picture
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CreatePostSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.CreatePostErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.CreatePostErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.CreatePostErrorResponse'
      summary: Create  new post
      tags:
      - posts
  /posts/:id:
    put:
      consumes:
      - multipart/form-data
      description: Edit post
      parameters:
      - description: title
        in: formData
        name: title
        type: string
      - description: type of post
        in: formData
        name: type_of_post
        type: string
      - description: text
        in: formData
        name: text
        type: string
      - collectionFormat: csv
        description: profile picture
        in: formData
        items:
          type: file
        name: profile_picture
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.EditPostSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.EditPostErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.EditPostErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.EditPostErrorResponse'
      summary: Edit post
      tags:
      - posts
  /users/register:
    post:
      consumes:
      - multipart/form-data
      description: register user
      parameters:
      - description: member number
        in: formData
        maxLength: 10
        minLength: 5
        name: member_number
        required: true
        type: string
      - description: email
        in: formData
        name: email
        required: true
        type: string
      - description: first name
        in: formData
        name: first_name
        required: true
        type: string
      - description: last name
        in: formData
        name: last_name
        required: true
        type: string
      - description: profile picture
        in: formData
        name: profile_picture
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.RegisterUserSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.RegisterUserErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.RegisterUserErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.RegisterUserErrorResponse'
      summary: Register user
      tags:
      - accounts
swagger: "2.0"
